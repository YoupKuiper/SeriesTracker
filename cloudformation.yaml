AWSTemplateFormatVersion: '2010-09-09'
Description: Deploying TVShowsTracker infrastructure
Parameters:
  ArtifactBucketName:
    Type: String
    Description: Name of the S3 bucket where artifacts are stored
  CodeZipFileName:
    Type: String
    Description: Name of the zipfile containing the Lambda code
  TheMovieDbToken:
    Type: String
    Description: Token for calling the movie db api
  VerifiedEmailAddress:
    Type: String
    Description: Email address used to send emails
Outputs:
  LambdaRoleARN:
    Description: Role for TVShowsTrackerLambda execution.
    Value:
      Fn::GetAtt:
        - LambdaIAMRole
        - Arn
    Export:
      Name:
        Fn::Sub: LambdaIAMRole
  LambdaFunctionName:
    Value:
      Ref: LambdaFunction
  LambdaFunctionARN:
    Description: Lambda function ARN.
    Value:
      Fn::GetAtt:
        - LambdaFunction
        - Arn
    Export:
      Name: LambdaFunctionARN
Resources:
  LambdaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: lambda-role
      AssumeRolePolicyDocument:
        Statement:
          - Action:
            - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/AmazonSESFullAccess
      Path: /
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName:
        Fn::Sub: TVShowsTrackerLambda
      Description: TVShowsTracker Lambda Function
      Runtime: nodejs16.x
      Code:
        S3Bucket: !Ref ArtifactBucketName
        S3Key: !Ref CodeZipFileName
      Environment:
        Variables:
          THE_MOVIE_DB_TOKEN: !Ref TheMovieDbToken
          VERIFIED_EMAIL_ADDRESS: !Ref VerifiedEmailAddress
      Handler: index.handler
      MemorySize: 128
      Timeout: 10
      Role:
        Fn::GetAtt:
          - LambdaRole
          - Arn
  ScheduledRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "ScheduledRule"
      ScheduleExpression: "rate(1 hour)"
      State: "ENABLED"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "LambdaFunction"
              - "Arn"
          Id: "TargetFunctionV1"
  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: 
        Ref: "LambdaFunction"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "ScheduledRule"
          - "Arn"